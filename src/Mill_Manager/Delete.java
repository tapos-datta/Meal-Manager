
package Mill_Manager;

import static Mill_Manager.ResultShow.resultShow;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author TAPOS DATTA
 * in class Delete all data are processing or delete 
 */
public class Delete extends javax.swing.JFrame {

    /**
     * Creates new form Extra
     */
    
    //variable declaration start
     public static  Delete  delete;
     private static int check=0;
     private Initialization result,nextResult;
     //variable declaration end
     
     /**
      * constructor of Delete
      * set the frame name "DELETE"
      */
    
    public Delete() {
        super("DELETE");
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("logo.png")).getImage());
        setExtendedState(JFrame.MAXIMIZED_HORIZ);
        setLocationRelativeTo(null);
        setResizable(false);
         File_Load();
         
    }
    
    
        /**
         * to check the initialization.ser file exist or not  in File_Load method
         * 
         */
    
     void File_Load(){
           
        try {
            FileInputStream fin=new FileInputStream("initialization.ser");
            ObjectInputStream out=new  ObjectInputStream(fin);
            
            try {
                 result=(Initialization) out.readObject();
                 out.close();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Delete.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } catch (FileNotFoundException ex) {
            
            JOptionPane.showMessageDialog(null, "Initialize data first\n Thank you");
            check=1;
            MainWindow.mainWindow.setVisible(true);
            
        } catch (IOException ex) {
            Logger.getLogger(Delete.class.getName()).log(Level.SEVERE, null, ex);
        }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cleanAll = new javax.swing.JButton();
        proceed = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        back = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        cleanAll.setBackground(new java.awt.Color(255, 0, 0));
        cleanAll.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cleanAll.setText("Clean Data With Member List");
        cleanAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanAllActionPerformed(evt);
            }
        });

        proceed.setBackground(new java.awt.Color(255, 102, 102));

        proceed.setFont(new java.awt.Font("Tahoma", 0, 24));

        proceed.setText("Proceed To Next Month  ");
        proceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Clean Operation");

        back.setBackground(new java.awt.Color(255, 204, 102));
        back.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(back)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cleanAll, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                            .addComponent(proceed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(181, 181, 181))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(cleanAll, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(proceed, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * @param evt cleanAll button
     * erase all previous data
     * delete the "Initialization.ser" file
     */
    private void cleanAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanAllActionPerformed
        
        int reply = JOptionPane.showConfirmDialog(null,
                                          "Are you want to erase all previous data",
                                          "Confirmation",
                                          JOptionPane.YES_NO_OPTION);
        if(reply==0)
        {
        
            File fi=new File("initialization.ser");
            fi.delete();
            MainWindow.mainWindow.setVisible(true);
            delete.dispose();
        }
        
    }//GEN-LAST:event_cleanAllActionPerformed

    
    /**
     * 
     * @param evt proceed button
     * using previous member and their previous balance proceed to next month 
     */
    private void proceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedActionPerformed
            
        int reply = JOptionPane.showConfirmDialog(null,
                                          "Are you want to erase previous data\n And proceed to next month with  same member",
                                          "Confirmation",
                                          JOptionPane.YES_NO_OPTION);
            if(reply==0)
            {
                int month=result.month+1;
                int year=result.year;
                if(month>12)
                {
                    month=1;
                    year=year+1;
                }
                int day=Initial.day_check(month, year);
                
                nextResult=new Initialization(month, year, day,result.nameList,result.member);
                
                fileWrite();
                
                MainWindow.mainWindow.setVisible(true);
                delete.dispose();
 
            }
        
    }//GEN-LAST:event_proceedActionPerformed
    
    /**
     * 
     * @param evt back button
     * this frame is closed and back to Main_Window frame
     */
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        MainWindow.mainWindow.setVisible(true);
        delete.dispose();
    }//GEN-LAST:event_backActionPerformed

    
    /**
     * new month data is saved in "initialization.ser"
     * by filewrite method
     */
    
    void fileWrite(){
       
        try {
               FileOutputStream fos= new  FileOutputStream("initialization.ser");
               
               try {
                   ObjectOutputStream out=new ObjectOutputStream(fos);
                   
                   out.writeObject(nextResult);
                   out.close();
               } catch (IOException ex) {
                   Logger.getLogger(Delete.class.getName()).log(Level.SEVERE, null, ex);
               }
           } catch (FileNotFoundException ex) {
               Logger.getLogger(Delete.class.getName()).log(Level.SEVERE, null, ex);
           }
    }
    
    /**
     * create a new JFrame using callDelete method 
     */
    
    public static void callDelete() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Delete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                delete=new Delete();
                if(check==0)
                    delete.setVisible(true);
                else
                     delete.dispose();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton cleanAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton proceed;
    // End of variables declaration//GEN-END:variables
}
